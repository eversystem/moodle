{"version":3,"sources":["../src/dynamic.js"],"names":["watching","checkTableIsDynamic","tableRoot","Error","matches","Selectors","main","region","getFiltersetFromTable","JSON","parse","dataset","tableFilters","refreshTableContent","filterset","tableHandler","tableUniqueid","sortBy","tableSortBy","sortOrder","tableSortOrder","joinType","jointype","filters","firstinitial","tableFirstInitial","lastinitial","tableLastInitial","then","data","placeholder","document","createElement","innerHTML","html","replaceWith","childNodes","updateTable","firstInitial","lastInitial","refreshContent","stringify","Promise","resolve","setFilters","setSortOrder","setFirstInitial","setLastInitial","init","addEventListener","e","target","closest","sortableLink","table","links","sortableColumn","preventDefault","sortby","sortorder","firstInitialLink","initialsBar","initial","lastInitialLink"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to handle dynamic table features.\n *\n * @module     core_table/dynamic\n * @package    core_table\n * @copyright  2020 Simey Lameze <simey@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {fetch as fetchTableData} from 'core_table/local/dynamic/repository';\nimport * as Selectors from 'core_table/local/dynamic/selectors';\n\nlet watching = false;\n\n/**\n * Ensure that a table is a dynamic table.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Bool}\n */\nconst checkTableIsDynamic = tableRoot => {\n    if (!tableRoot) {\n        // The table is not a dynamic table.\n        throw new Error(\"The table specified is not a dynamic table and cannot be updated\");\n    }\n\n    if (!tableRoot.matches(Selectors.main.region)) {\n        // The table is not a dynamic table.\n        throw new Error(\"The table specified is not a dynamic table and cannot be updated\");\n    }\n\n    return true;\n};\n\n/**\n * Get the filterset data from a known dynamic table.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Object}\n */\nconst getFiltersetFromTable = tableRoot => {\n    return JSON.parse(tableRoot.dataset.tableFilters);\n};\n\n/**\n * Update the specified table based on its current values.\n *\n * @param {HTMLElement} tableRoot\n * @returns {Promise}\n */\nexport const refreshTableContent = tableRoot => {\n    const filterset = getFiltersetFromTable(tableRoot);\n\n    return fetchTableData(\n        tableRoot.dataset.tableHandler,\n        tableRoot.dataset.tableUniqueid,\n        {\n            sortBy: tableRoot.dataset.tableSortBy,\n            sortOrder: tableRoot.dataset.tableSortOrder,\n            joinType: filterset.jointype,\n            filters: filterset.filters,\n            firstinitial: tableRoot.dataset.tableFirstInitial,\n            lastinitial: tableRoot.dataset.tableLastInitial,\n        }\n    )\n    .then(data => {\n        const placeholder = document.createElement('div');\n        placeholder.innerHTML = data.html;\n        tableRoot.replaceWith(...placeholder.childNodes);\n\n        return data;\n    });\n};\n\nexport const updateTable = (tableRoot, {\n    sortBy = null,\n    sortOrder = null,\n    filters = null,\n    firstInitial = null,\n    lastInitial = null,\n} = {}, refreshContent = true) => {\n    checkTableIsDynamic(tableRoot);\n\n    // Update sort fields.\n    if (sortBy && sortOrder) {\n        tableRoot.dataset.tableSortBy = sortBy;\n        tableRoot.dataset.tableSortOrder = sortOrder;\n    }\n\n    // Update initials.\n    if (firstInitial !== null) {\n        tableRoot.dataset.tableFirstInitial = firstInitial;\n    }\n\n    if (lastInitial !== null) {\n        tableRoot.dataset.tableLastInitial = lastInitial;\n    }\n\n    // Update filters.\n    if (filters) {\n        tableRoot.dataset.tableFilters = JSON.stringify(filters);\n    }\n\n    // Refresh.\n    if (refreshContent) {\n        return refreshTableContent(tableRoot);\n    } else {\n        return Promise.resolve();\n    }\n};\n\n/**\n * Update the specified table using the new filters.\n *\n * @param {HTMLElement} tableRoot\n * @param {Object} filters\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setFilters = (tableRoot, filters, refreshContent = true) =>\n    updateTable(tableRoot, {filters}, refreshContent);\n\n/**\n * Update the sort order.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} sortBy\n * @param {Number} sortOrder\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setSortOrder = (tableRoot, sortBy, sortOrder, refreshContent = true) =>\n    updateTable(tableRoot, {sortBy, sortOrder}, refreshContent);\n\n/**\n * Update the first initial to show.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} firstInitial\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setFirstInitial = (tableRoot, firstInitial, refreshContent = true) =>\n    updateTable(tableRoot, {firstInitial}, refreshContent);\n\n/**\n * Update the last initial to show.\n *\n * @param {HTMLElement} tableRoot\n * @param {String} lastInitial\n * @param {Bool} refreshContent\n * @returns {Promise}\n */\nexport const setLastInitial = (tableRoot, lastInitial, refreshContent = true) =>\n    updateTable(tableRoot, {lastInitial}, refreshContent);\n\n/**\n * Set up listeners to handle table updates.\n */\nexport const init = () => {\n    if (watching) {\n        // Already watching.\n        return;\n    }\n    watching = true;\n\n    document.addEventListener('click', e => {\n        const tableRoot = e.target.closest(Selectors.main.region);\n\n        if (!tableRoot) {\n            return;\n        }\n\n        const sortableLink = e.target.closest(Selectors.table.links.sortableColumn);\n        if (sortableLink) {\n            e.preventDefault();\n\n            setSortOrder(tableRoot, sortableLink.dataset.sortby, sortableLink.dataset.sortorder);\n        }\n\n        const firstInitialLink = e.target.closest(Selectors.initialsBar.links.firstInitial);\n        if (firstInitialLink !== null) {\n            e.preventDefault();\n\n            setFirstInitial(tableRoot, firstInitialLink.dataset.initial);\n        }\n\n        const lastInitialLink = e.target.closest(Selectors.initialsBar.links.lastInitial);\n        if (lastInitialLink !== null) {\n            e.preventDefault();\n\n            setLastInitial(tableRoot, lastInitialLink.dataset.initial);\n        }\n    });\n};\n"],"file":"dynamic.min.js"}